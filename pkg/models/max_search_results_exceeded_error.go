// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// MaxSearchResultsExceededError Error returned when total maximum supported results have been reached.
//
// swagger:model MaxSearchResultsExceededError
type MaxSearchResultsExceededError struct {

	// The name for this type of error, `maximum-results-exceeded`
	// Required: true
	Error *string `json:"error"`

	// The maximum number of search results supported, `1000`
	// Required: true
	MaximumResults *int64 `json:"maximum-results"`

	// An explanatory message: "A maximum of 1000 search results are supported."
	// Required: true
	Message *string `json:"message"`
}

// Validate validates this max search results exceeded error
func (m *MaxSearchResultsExceededError) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateError(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMaximumResults(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMessage(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *MaxSearchResultsExceededError) validateError(formats strfmt.Registry) error {

	if err := validate.Required("error", "body", m.Error); err != nil {
		return err
	}

	return nil
}

func (m *MaxSearchResultsExceededError) validateMaximumResults(formats strfmt.Registry) error {

	if err := validate.Required("maximum-results", "body", m.MaximumResults); err != nil {
		return err
	}

	return nil
}

func (m *MaxSearchResultsExceededError) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("message", "body", m.Message); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *MaxSearchResultsExceededError) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *MaxSearchResultsExceededError) UnmarshalBinary(b []byte) error {
	var res MaxSearchResultsExceededError
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
