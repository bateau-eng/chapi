// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CreateFileObj create file obj
//
// swagger:model CreateFileObj
type CreateFileObj struct {

	// content type
	// Required: true
	ContentType *string `json:"content-type"`

	// filename
	// Required: true
	Filename *string `json:"filename"`

	// size
	// Required: true
	Size *int64 `json:"size"`

	// tempfile
	// Required: true
	Tempfile io.ReadCloser `json:"tempfile"`
}

// Validate validates this create file obj
func (m *CreateFileObj) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateContentType(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateFilename(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSize(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTempfile(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CreateFileObj) validateContentType(formats strfmt.Registry) error {

	if err := validate.Required("content-type", "body", m.ContentType); err != nil {
		return err
	}

	return nil
}

func (m *CreateFileObj) validateFilename(formats strfmt.Registry) error {

	if err := validate.Required("filename", "body", m.Filename); err != nil {
		return err
	}

	return nil
}

func (m *CreateFileObj) validateSize(formats strfmt.Registry) error {

	if err := validate.Required("size", "body", m.Size); err != nil {
		return err
	}

	return nil
}

func (m *CreateFileObj) validateTempfile(formats strfmt.Registry) error {

	if err := validate.Required("tempfile", "body", io.ReadCloser(m.Tempfile)); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CreateFileObj) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CreateFileObj) UnmarshalBinary(b []byte) error {
	var res CreateFileObj
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
