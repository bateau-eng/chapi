// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/bateau-eng/chapi/pkg/models"
)

// NewPutAPIV3EntityTemplatesEntityTemplatePublicIDParams creates a new PutAPIV3EntityTemplatesEntityTemplatePublicIDParams object
// with the default values initialized.
func NewPutAPIV3EntityTemplatesEntityTemplatePublicIDParams() *PutAPIV3EntityTemplatesEntityTemplatePublicIDParams {
	var ()
	return &PutAPIV3EntityTemplatesEntityTemplatePublicIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPutAPIV3EntityTemplatesEntityTemplatePublicIDParamsWithTimeout creates a new PutAPIV3EntityTemplatesEntityTemplatePublicIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPutAPIV3EntityTemplatesEntityTemplatePublicIDParamsWithTimeout(timeout time.Duration) *PutAPIV3EntityTemplatesEntityTemplatePublicIDParams {
	var ()
	return &PutAPIV3EntityTemplatesEntityTemplatePublicIDParams{

		timeout: timeout,
	}
}

// NewPutAPIV3EntityTemplatesEntityTemplatePublicIDParamsWithContext creates a new PutAPIV3EntityTemplatesEntityTemplatePublicIDParams object
// with the default values initialized, and the ability to set a context for a request
func NewPutAPIV3EntityTemplatesEntityTemplatePublicIDParamsWithContext(ctx context.Context) *PutAPIV3EntityTemplatesEntityTemplatePublicIDParams {
	var ()
	return &PutAPIV3EntityTemplatesEntityTemplatePublicIDParams{

		Context: ctx,
	}
}

// NewPutAPIV3EntityTemplatesEntityTemplatePublicIDParamsWithHTTPClient creates a new PutAPIV3EntityTemplatesEntityTemplatePublicIDParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPutAPIV3EntityTemplatesEntityTemplatePublicIDParamsWithHTTPClient(client *http.Client) *PutAPIV3EntityTemplatesEntityTemplatePublicIDParams {
	var ()
	return &PutAPIV3EntityTemplatesEntityTemplatePublicIDParams{
		HTTPClient: client,
	}
}

/*PutAPIV3EntityTemplatesEntityTemplatePublicIDParams contains all the parameters to send to the API endpoint
for the put API v3 entity templates entity template public ID operation typically these are written to a http.Request
*/
type PutAPIV3EntityTemplatesEntityTemplatePublicIDParams struct {

	/*UpdateEntityTemplate
	  Request parameters for changing either a template's name or any of
	  the attributes it is designed to pre-populate.

	*/
	UpdateEntityTemplate *models.UpdateEntityTemplate
	/*EntityTemplatePublicID
	  The unique ID of the template to be updated.

	*/
	EntityTemplatePublicID strfmt.UUID

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the put API v3 entity templates entity template public ID params
func (o *PutAPIV3EntityTemplatesEntityTemplatePublicIDParams) WithTimeout(timeout time.Duration) *PutAPIV3EntityTemplatesEntityTemplatePublicIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the put API v3 entity templates entity template public ID params
func (o *PutAPIV3EntityTemplatesEntityTemplatePublicIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the put API v3 entity templates entity template public ID params
func (o *PutAPIV3EntityTemplatesEntityTemplatePublicIDParams) WithContext(ctx context.Context) *PutAPIV3EntityTemplatesEntityTemplatePublicIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the put API v3 entity templates entity template public ID params
func (o *PutAPIV3EntityTemplatesEntityTemplatePublicIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the put API v3 entity templates entity template public ID params
func (o *PutAPIV3EntityTemplatesEntityTemplatePublicIDParams) WithHTTPClient(client *http.Client) *PutAPIV3EntityTemplatesEntityTemplatePublicIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the put API v3 entity templates entity template public ID params
func (o *PutAPIV3EntityTemplatesEntityTemplatePublicIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithUpdateEntityTemplate adds the updateEntityTemplate to the put API v3 entity templates entity template public ID params
func (o *PutAPIV3EntityTemplatesEntityTemplatePublicIDParams) WithUpdateEntityTemplate(updateEntityTemplate *models.UpdateEntityTemplate) *PutAPIV3EntityTemplatesEntityTemplatePublicIDParams {
	o.SetUpdateEntityTemplate(updateEntityTemplate)
	return o
}

// SetUpdateEntityTemplate adds the updateEntityTemplate to the put API v3 entity templates entity template public ID params
func (o *PutAPIV3EntityTemplatesEntityTemplatePublicIDParams) SetUpdateEntityTemplate(updateEntityTemplate *models.UpdateEntityTemplate) {
	o.UpdateEntityTemplate = updateEntityTemplate
}

// WithEntityTemplatePublicID adds the entityTemplatePublicID to the put API v3 entity templates entity template public ID params
func (o *PutAPIV3EntityTemplatesEntityTemplatePublicIDParams) WithEntityTemplatePublicID(entityTemplatePublicID strfmt.UUID) *PutAPIV3EntityTemplatesEntityTemplatePublicIDParams {
	o.SetEntityTemplatePublicID(entityTemplatePublicID)
	return o
}

// SetEntityTemplatePublicID adds the entityTemplatePublicId to the put API v3 entity templates entity template public ID params
func (o *PutAPIV3EntityTemplatesEntityTemplatePublicIDParams) SetEntityTemplatePublicID(entityTemplatePublicID strfmt.UUID) {
	o.EntityTemplatePublicID = entityTemplatePublicID
}

// WriteToRequest writes these params to a swagger request
func (o *PutAPIV3EntityTemplatesEntityTemplatePublicIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.UpdateEntityTemplate != nil {
		if err := r.SetBodyParam(o.UpdateEntityTemplate); err != nil {
			return err
		}
	}

	// path param entity-template-public-id
	if err := r.SetPathParam("entity-template-public-id", o.EntityTemplatePublicID.String()); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
