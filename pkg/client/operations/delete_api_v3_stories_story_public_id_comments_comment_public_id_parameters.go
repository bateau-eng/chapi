// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewDeleteAPIV3StoriesStoryPublicIDCommentsCommentPublicIDParams creates a new DeleteAPIV3StoriesStoryPublicIDCommentsCommentPublicIDParams object
// with the default values initialized.
func NewDeleteAPIV3StoriesStoryPublicIDCommentsCommentPublicIDParams() *DeleteAPIV3StoriesStoryPublicIDCommentsCommentPublicIDParams {
	var ()
	return &DeleteAPIV3StoriesStoryPublicIDCommentsCommentPublicIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteAPIV3StoriesStoryPublicIDCommentsCommentPublicIDParamsWithTimeout creates a new DeleteAPIV3StoriesStoryPublicIDCommentsCommentPublicIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeleteAPIV3StoriesStoryPublicIDCommentsCommentPublicIDParamsWithTimeout(timeout time.Duration) *DeleteAPIV3StoriesStoryPublicIDCommentsCommentPublicIDParams {
	var ()
	return &DeleteAPIV3StoriesStoryPublicIDCommentsCommentPublicIDParams{

		timeout: timeout,
	}
}

// NewDeleteAPIV3StoriesStoryPublicIDCommentsCommentPublicIDParamsWithContext creates a new DeleteAPIV3StoriesStoryPublicIDCommentsCommentPublicIDParams object
// with the default values initialized, and the ability to set a context for a request
func NewDeleteAPIV3StoriesStoryPublicIDCommentsCommentPublicIDParamsWithContext(ctx context.Context) *DeleteAPIV3StoriesStoryPublicIDCommentsCommentPublicIDParams {
	var ()
	return &DeleteAPIV3StoriesStoryPublicIDCommentsCommentPublicIDParams{

		Context: ctx,
	}
}

// NewDeleteAPIV3StoriesStoryPublicIDCommentsCommentPublicIDParamsWithHTTPClient creates a new DeleteAPIV3StoriesStoryPublicIDCommentsCommentPublicIDParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDeleteAPIV3StoriesStoryPublicIDCommentsCommentPublicIDParamsWithHTTPClient(client *http.Client) *DeleteAPIV3StoriesStoryPublicIDCommentsCommentPublicIDParams {
	var ()
	return &DeleteAPIV3StoriesStoryPublicIDCommentsCommentPublicIDParams{
		HTTPClient: client,
	}
}

/*DeleteAPIV3StoriesStoryPublicIDCommentsCommentPublicIDParams contains all the parameters to send to the API endpoint
for the delete API v3 stories story public ID comments comment public ID operation typically these are written to a http.Request
*/
type DeleteAPIV3StoriesStoryPublicIDCommentsCommentPublicIDParams struct {

	/*CommentPublicID
	  The ID of the Comment.

	*/
	CommentPublicID int64
	/*StoryPublicID
	  The ID of the Story that the Comment is in.

	*/
	StoryPublicID int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the delete API v3 stories story public ID comments comment public ID params
func (o *DeleteAPIV3StoriesStoryPublicIDCommentsCommentPublicIDParams) WithTimeout(timeout time.Duration) *DeleteAPIV3StoriesStoryPublicIDCommentsCommentPublicIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete API v3 stories story public ID comments comment public ID params
func (o *DeleteAPIV3StoriesStoryPublicIDCommentsCommentPublicIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete API v3 stories story public ID comments comment public ID params
func (o *DeleteAPIV3StoriesStoryPublicIDCommentsCommentPublicIDParams) WithContext(ctx context.Context) *DeleteAPIV3StoriesStoryPublicIDCommentsCommentPublicIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete API v3 stories story public ID comments comment public ID params
func (o *DeleteAPIV3StoriesStoryPublicIDCommentsCommentPublicIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete API v3 stories story public ID comments comment public ID params
func (o *DeleteAPIV3StoriesStoryPublicIDCommentsCommentPublicIDParams) WithHTTPClient(client *http.Client) *DeleteAPIV3StoriesStoryPublicIDCommentsCommentPublicIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete API v3 stories story public ID comments comment public ID params
func (o *DeleteAPIV3StoriesStoryPublicIDCommentsCommentPublicIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCommentPublicID adds the commentPublicID to the delete API v3 stories story public ID comments comment public ID params
func (o *DeleteAPIV3StoriesStoryPublicIDCommentsCommentPublicIDParams) WithCommentPublicID(commentPublicID int64) *DeleteAPIV3StoriesStoryPublicIDCommentsCommentPublicIDParams {
	o.SetCommentPublicID(commentPublicID)
	return o
}

// SetCommentPublicID adds the commentPublicId to the delete API v3 stories story public ID comments comment public ID params
func (o *DeleteAPIV3StoriesStoryPublicIDCommentsCommentPublicIDParams) SetCommentPublicID(commentPublicID int64) {
	o.CommentPublicID = commentPublicID
}

// WithStoryPublicID adds the storyPublicID to the delete API v3 stories story public ID comments comment public ID params
func (o *DeleteAPIV3StoriesStoryPublicIDCommentsCommentPublicIDParams) WithStoryPublicID(storyPublicID int64) *DeleteAPIV3StoriesStoryPublicIDCommentsCommentPublicIDParams {
	o.SetStoryPublicID(storyPublicID)
	return o
}

// SetStoryPublicID adds the storyPublicId to the delete API v3 stories story public ID comments comment public ID params
func (o *DeleteAPIV3StoriesStoryPublicIDCommentsCommentPublicIDParams) SetStoryPublicID(storyPublicID int64) {
	o.StoryPublicID = storyPublicID
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteAPIV3StoriesStoryPublicIDCommentsCommentPublicIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param comment-public-id
	if err := r.SetPathParam("comment-public-id", swag.FormatInt64(o.CommentPublicID)); err != nil {
		return err
	}

	// path param story-public-id
	if err := r.SetPathParam("story-public-id", swag.FormatInt64(o.StoryPublicID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
